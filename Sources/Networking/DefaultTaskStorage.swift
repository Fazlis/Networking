//
//  DefaultTaskStorage.swift
//  Networking
//
//  Created by Fazliddinov Iskandar on 31/05/25.
//

import Foundation
import NetworkProtocols

public actor DefaultTaskStorage: TaskStorageProtocol {
    
    private var tasks: [String: Task<Void, Never>] = [:]
    
    private var isDebug: Bool
    
    public init(isDebug: Bool = false) {
        self.isDebug = isDebug
    }
    
    public func add(task: Task<Void, Never>, id: String) {
        if let existingTask = tasks[id] {
            log("‚ôªÔ∏è –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É [ID: \(id)]",
                details: "–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: \(tasks.count)")
            existingTask.cancel()
        } else {
            log("üÜïüìå –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞ [ID: \(id)]",
                details: "–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: \(tasks.count)")
        }

        tasks[id] = task
    }
    
    public func removeTask(for id: String) {
        guard tasks[id] != nil else {
            log("‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É [ID: \(id)]")
            return
        }
        
        tasks[id] = nil
        log("üóë –£–¥–∞–ª–µ–Ω–∞ –∑–∞–¥–∞—á–∞ [ID: \(id)]",
            details: "–û—Å—Ç–∞–ª–æ—Å—å –∑–∞–¥–∞—á: \(tasks.count)")
    }
    
    public func cancelAllTasks() {
        guard !tasks.isEmpty else {
            log("üîç –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –æ—Ç–º–µ–Ω—ã")
            return
        }
        
        let count = tasks.count
        tasks.values.forEach { $0.cancel() }
        tasks.removeAll()
        
        log("üßº –ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–º–µ–Ω–∞ –∑–∞–¥–∞—á",
            details: "–û—Ç–º–µ–Ω–µ–Ω–æ –∑–∞–¥–∞—á: \(count)")
    }
    
    public func cancelTask(with id: String) {
        guard let task = tasks[id] else {
            log("‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É [ID: \(id)]")
            return
        }
        
        task.cancel()
        tasks.removeValue(forKey: id)
        log("‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞ –∑–∞–¥–∞—á–∞ [ID: \(id)]",
            details: "–û—Å—Ç–∞–ª–æ—Å—å –∑–∞–¥–∞—á: \(tasks.count)")
    }
    
    // MARK: - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    private func log(_ message: String, details: String? = nil) {
        let header = "üåê [RequestQueue]"
        let fullMessage = details != nil
            ? "\(header) \(message) | \(details!)"
            : "\(header) \(message)"
        
        if self.isDebug {
            print(fullMessage)
        }
    }
}
